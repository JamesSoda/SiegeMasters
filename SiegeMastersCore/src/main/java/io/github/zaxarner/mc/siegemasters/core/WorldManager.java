package io.github.zaxarner.mc.siegemasters.core;

import io.github.zaxarner.mc.siegemasters.core.utils.LocationUtils;
import io.github.zaxarner.mc.siegemasters.core.utils.PlayerUtils;
import org.bukkit.*;
import org.bukkit.entity.Player;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.*;
import java.util.logging.Level;

/**
 * Created on 5/7/2020.
 */
public class WorldManager {

    public enum WorldType {
        PVP("worlds.pvp", ChatColor.RED), CREATIVE("worlds.creative", ChatColor.BLUE),
        SPAWN("worlds.spawn", ChatColor.WHITE), OTHER("worlds.other", ChatColor.WHITE);

        private String configLocation;
        private ChatColor tabColor;

        WorldType(String configLocation, ChatColor tabColor) {
            this.configLocation = configLocation;
            this.tabColor = tabColor;
        }
    }

    private SiegeMastersCore plugin;

    private Location spawnLocation;

    private final Map<WorldType, List<World>> worlds = new HashMap<>();

    public WorldManager(SiegeMastersCore plugin) {
        this.plugin = plugin;


        spawnLocation = LocationUtils.getLocationFromString(plugin.getConfig().getString("spawn"));
        if (spawnLocation == null)
            SiegeMastersCore.log("SpawnLocation is null! Check config.yml!", Level.SEVERE);

        for (WorldType type : WorldType.values()) {
            List<World> worlds = new ArrayList<>();
            for (String s : plugin.getConfig().getStringList(type.configLocation)) {
                World world = Bukkit.getWorld(s);
                if (world != null) {
                    worlds.add(world);
                }
            }
            this.worlds.put(type, worlds);
        }
    }

    @Nullable
    public WorldType getWorldType(@NotNull World world) {
        for (WorldType type : WorldType.values()) {
            if (worlds.get(type).contains(world)) {
                return type;
            }
        }
        //TODO: Fix this. Return type should not default to PVP. Only doing this because worlds generated by other plugins are unregistered.
        return WorldType.PVP;
        //SiegeMastersCore.log("Tried to get WorldType of an unregistered world!", Level.WARNING);
        //return null;
    }

    @NotNull
    public List<World> getWorldsOfType(@NotNull WorldType worldType) {
        return worlds.get(worldType);
    }

    @Nullable
    public Location getSpawnLocation() {
        return spawnLocation;
    }

    public void handleWorldChange(@NotNull Player player, @NotNull World from, @NotNull World to) {
        refreshPlayerListName(player);

        if (from.getPlayers().size() <= 0) {
            // The world the player teleported from is empty.

        }
    }

    public void refreshPlayerListName(@NotNull Player player) {
        World playerWorld = player.getWorld();

        WorldType type = getWorldType(playerWorld);
        if (type != null) {
            player.setPlayerListName(type.tabColor + player.getName());
            return;
        }
        player.setPlayerListName(WorldType.PVP.tabColor + player.getName());
    }

}
